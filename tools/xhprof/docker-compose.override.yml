version: '3.7'

services:

  ##
  # The web server container.
  ##
  wordpress-develop:
    image: nginx:alpine

    networks:
      - wpdevnet

    ports:
      - ${LOCAL_PORT-8889}:80

    environment:
      LOCAL_DIR: ${LOCAL_DIR-src}

    volumes:
      - ./tools/local-env/default.template:/etc/nginx/conf.d/default.template
      - ./:/var/www

    # Load our config file, substituting environment variables into the config.
    command: /bin/sh -c "envsubst '$$LOCAL_DIR' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

    depends_on:
      - php

  ##
  # The PHP container.
  ##
  php:
    image: spacedmonkey/php-xhprof:${LOCAL_PHP-latest}
    networks:
      - wpdevnet

    environment:
      - LOCAL_PHP_XDEBUG=${LOCAL_PHP_XDEBUG-false}
      - LOCAL_PHP_MEMCACHED=true
      - PHP_FPM_UID=${PHP_FPM_UID-1000}
      - PHP_FPM_GID=${PHP_FPM_GID-1000}

    volumes:
      - ./tools/local-env/php-config.ini:/usr/local/etc/php/conf.d/php-config.ini
      - ./:/var/www

    depends_on:
      - mysql
      - memcached
      - xhgui

  xhgui:
    # https://hub.docker.com/r/spacedmonkey/xhgui/tags
    image: spacedmonkey/xhgui:latest
    restart: always
    environment:
      - XHGUI_MONGO_HOSTNAME=mongo
      - XHGUI_MONGO_DATABASE=xhprof
    ports:
      - "8142:80"
    depends_on:
      - mongo
    networks:
      - wpdevnet

  mongo:
    # https://hub.docker.com/r/spacedmonkey/mongodb/tags
    image: spacedmonkey/mongodb:latest
    # (case sensitive) engine: mmapv1, rocksdb, wiredTiger, inMemory
    command: --storageEngine=wiredTiger
    restart: always
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    networks:
      - wpdevnet
  ##
  # The MySQL container.
  ##
  mysql:
    image: ${LOCAL_DB_TYPE-mysql}:${LOCAL_DB_VERSION-latest}

    networks:
      - wpdevnet

    ports:
      - "3306"

    environment:
      MYSQL_ROOT_PASSWORD: password

    volumes:
      - ./tools/local-env/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
      - mysql:/var/lib/mysql

    # For compatibility with PHP versions that don't support the caching_sha2_password auth plugin used in MySQL 8.0.
    command: --default-authentication-plugin=mysql_native_password

  ##
  # The WP CLI container.
  ##
  cli:
    image: wordpressdevelop/cli:${LOCAL_PHP-latest}

    networks:
      - wpdevnet

    environment:
      - LOCAL_PHP_XDEBUG=${LOCAL_PHP_XDEBUG-false}
      - LOCAL_PHP_MEMCACHED=true
      - PHP_FPM_UID=${PHP_FPM_UID-1000}
      - PHP_FPM_GID=${PHP_FPM_GID-1000}

    volumes:
      - ./:/var/www

    # The init directive ensures the command runs with a PID > 1, so Ctrl+C works correctly.
    init: true

  memcached:
    image: memcached

    networks:
      - wpdevnet

volumes:
  # So that sites aren't wiped every time containers are restarted, MySQL uses a persistent volume.
  mysql: {}
  webroot-share:
  mongodb:

networks:
  # Creating our own network allows us to connect between containers using their service name.
  wpdevnet:
    driver: bridge
